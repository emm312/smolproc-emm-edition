|smolprocee
rawclk => rawclk.IN1
async_rst => arst.IN1
data_out_A[0] <= cpu:cpu.data_out_A[0]
data_out_A[1] <= cpu:cpu.data_out_A[1]
data_out_A[2] <= cpu:cpu.data_out_A[2]
data_out_A[3] <= cpu:cpu.data_out_A[3]
data_out_A[4] <= cpu:cpu.data_out_A[4]
data_out_A[5] <= cpu:cpu.data_out_A[5]
data_out_A[6] <= cpu:cpu.data_out_A[6]
data_out_A[7] <= cpu:cpu.data_out_A[7]
data_out_B[0] <= cpu:cpu.data_out_B[0]
data_out_B[1] <= cpu:cpu.data_out_B[1]
data_out_B[2] <= cpu:cpu.data_out_B[2]
data_out_B[3] <= cpu:cpu.data_out_B[3]
data_out_B[4] <= cpu:cpu.data_out_B[4]
data_out_B[5] <= cpu:cpu.data_out_B[5]
data_out_B[6] <= cpu:cpu.data_out_B[6]
data_out_B[7] <= cpu:cpu.data_out_B[7]


|smolprocee|SystemClockDomainManager:clk_manager
ref_clk_50 => ref_clk_50.IN1
user_async_rst => StatusVector[0].ACLR
user_async_rst => StatusVector[1].ACLR
user_async_rst => StatusVector[2].ACLR
user_async_rst => ReferenceClockResetVector[0].ACLR
user_async_rst => ReferenceClockResetVector[1].ACLR
user_async_rst => ReferenceClockResetVector[2].ACLR
user_async_rst => ReferenceClockResetVector[3].ACLR
user_async_rst => ReferenceClockResetVector[4].ACLR
user_async_rst => ReferenceClockResetVector[5].ACLR
user_async_rst => ReferenceClockResetVector[6].ACLR
user_async_rst => ReferenceClockResetVector[7].ACLR
sys_clk <= pll:pll.c0
sys_clk_en <= StatusVector[2].DB_MAX_OUTPUT_PORT_TYPE
sys_clk_init <= StatusVector[1].DB_MAX_OUTPUT_PORT_TYPE
sys_sync_rst <= StatusVector[0].DB_MAX_OUTPUT_PORT_TYPE


|smolprocee|SystemClockDomainManager:clk_manager|pll:pll
areset => areset.IN1
inclk0 => sub_wire4[0].IN1
c0 <= altpll:altpll_component.clk
locked <= altpll:altpll_component.locked


|smolprocee|SystemClockDomainManager:clk_manager|pll:pll|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pll_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|smolprocee|SystemClockDomainManager:clk_manager|pll:pll|altpll:altpll_component|pll_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|smolprocee|cpu:cpu
clk => memory:ram.clk
clk => fetch:fetch_stage.clk
clk => regfile:regfile.clk
clk => decode:decode_stage.clk
sync_rst => memory:ram.sync_rst
sync_rst => fetch:fetch_stage.sync_rst
sync_rst => regfile:regfile.sync_rst
sync_rst => decode:decode_stage.sync_rst
data_out_A[0] <= decode:decode_stage.data_out_A[0]
data_out_A[1] <= decode:decode_stage.data_out_A[1]
data_out_A[2] <= decode:decode_stage.data_out_A[2]
data_out_A[3] <= decode:decode_stage.data_out_A[3]
data_out_A[4] <= decode:decode_stage.data_out_A[4]
data_out_A[5] <= decode:decode_stage.data_out_A[5]
data_out_A[6] <= decode:decode_stage.data_out_A[6]
data_out_A[7] <= decode:decode_stage.data_out_A[7]
data_out_B[0] <= decode:decode_stage.data_out_B[0]
data_out_B[1] <= decode:decode_stage.data_out_B[1]
data_out_B[2] <= decode:decode_stage.data_out_B[2]
data_out_B[3] <= decode:decode_stage.data_out_B[3]
data_out_B[4] <= decode:decode_stage.data_out_B[4]
data_out_B[5] <= decode:decode_stage.data_out_B[5]
data_out_B[6] <= decode:decode_stage.data_out_B[6]
data_out_B[7] <= decode:decode_stage.data_out_B[7]


|smolprocee|cpu:cpu|memory:ram
clk => ram.we_a.CLK
clk => ram.waddr_a[7].CLK
clk => ram.waddr_a[6].CLK
clk => ram.waddr_a[5].CLK
clk => ram.waddr_a[4].CLK
clk => ram.waddr_a[3].CLK
clk => ram.waddr_a[2].CLK
clk => ram.waddr_a[1].CLK
clk => ram.waddr_a[0].CLK
clk => ram.data_a[7].CLK
clk => ram.data_a[6].CLK
clk => ram.data_a[5].CLK
clk => ram.data_a[4].CLK
clk => ram.data_a[3].CLK
clk => ram.data_a[2].CLK
clk => ram.data_a[1].CLK
clk => ram.data_a[0].CLK
clk => data_out_B[0]~reg0.CLK
clk => data_out_B[1]~reg0.CLK
clk => data_out_B[2]~reg0.CLK
clk => data_out_B[3]~reg0.CLK
clk => data_out_B[4]~reg0.CLK
clk => data_out_B[5]~reg0.CLK
clk => data_out_B[6]~reg0.CLK
clk => data_out_B[7]~reg0.CLK
clk => data_out_A[0]~reg0.CLK
clk => data_out_A[1]~reg0.CLK
clk => data_out_A[2]~reg0.CLK
clk => data_out_A[3]~reg0.CLK
clk => data_out_A[4]~reg0.CLK
clk => data_out_A[5]~reg0.CLK
clk => data_out_A[6]~reg0.CLK
clk => data_out_A[7]~reg0.CLK
clk => ram.CLK0
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
addr_read_A[0] => ram.RADDR
addr_read_A[1] => ram.RADDR1
addr_read_A[2] => ram.RADDR2
addr_read_A[3] => ram.RADDR3
addr_read_A[4] => ram.RADDR4
addr_read_A[5] => ram.RADDR5
addr_read_A[6] => ram.RADDR6
addr_read_A[7] => ram.RADDR7
addr_write[0] => ram.waddr_a[0].DATAIN
addr_write[0] => ram.WADDR
addr_write[1] => ram.waddr_a[1].DATAIN
addr_write[1] => ram.WADDR1
addr_write[2] => ram.waddr_a[2].DATAIN
addr_write[2] => ram.WADDR2
addr_write[3] => ram.waddr_a[3].DATAIN
addr_write[3] => ram.WADDR3
addr_write[4] => ram.waddr_a[4].DATAIN
addr_write[4] => ram.WADDR4
addr_write[5] => ram.waddr_a[5].DATAIN
addr_write[5] => ram.WADDR5
addr_write[6] => ram.waddr_a[6].DATAIN
addr_write[6] => ram.WADDR6
addr_write[7] => ram.waddr_a[7].DATAIN
addr_write[7] => ram.WADDR7
pc[0] => ram.PORTBRADDR
pc[1] => ram.PORTBRADDR1
pc[2] => ram.PORTBRADDR2
pc[3] => ram.PORTBRADDR3
pc[4] => ram.PORTBRADDR4
pc[5] => ram.PORTBRADDR5
pc[6] => ram.PORTBRADDR6
pc[7] => ram.PORTBRADDR7
data[0] => ram.data_a[0].DATAIN
data[0] => ram.DATAIN
data[1] => ram.data_a[1].DATAIN
data[1] => ram.DATAIN1
data[2] => ram.data_a[2].DATAIN
data[2] => ram.DATAIN2
data[3] => ram.data_a[3].DATAIN
data[3] => ram.DATAIN3
data[4] => ram.data_a[4].DATAIN
data[4] => ram.DATAIN4
data[5] => ram.data_a[5].DATAIN
data[5] => ram.DATAIN5
data[6] => ram.data_a[6].DATAIN
data[6] => ram.DATAIN6
data[7] => ram.data_a[7].DATAIN
data[7] => ram.DATAIN7
write_en => ram.we_a.DATAIN
write_en => ram.WE
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
data_out_A[0] <= data_out_A[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[1] <= data_out_A[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[2] <= data_out_A[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[3] <= data_out_A[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[4] <= data_out_A[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[5] <= data_out_A[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[6] <= data_out_A[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[7] <= data_out_A[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[0] <= data_out_B[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[1] <= data_out_B[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[2] <= data_out_B[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[3] <= data_out_B[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[4] <= data_out_B[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[5] <= data_out_B[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[6] <= data_out_B[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[7] <= data_out_B[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|smolprocee|cpu:cpu|fetch:fetch_stage
clk => word[0]~reg0.CLK
clk => word[1]~reg0.CLK
clk => word[2]~reg0.CLK
clk => word[3]~reg0.CLK
clk => word[4]~reg0.CLK
clk => word[5]~reg0.CLK
clk => word[6]~reg0.CLK
clk => word[7]~reg0.CLK
clk => pc[0]~reg0.CLK
clk => pc[1]~reg0.CLK
clk => pc[2]~reg0.CLK
clk => pc[3]~reg0.CLK
clk => pc[4]~reg0.CLK
clk => pc[5]~reg0.CLK
clk => pc[6]~reg0.CLK
clk => pc[7]~reg0.CLK
sync_rst => pc.OUTPUTSELECT
sync_rst => pc.OUTPUTSELECT
sync_rst => pc.OUTPUTSELECT
sync_rst => pc.OUTPUTSELECT
sync_rst => pc.OUTPUTSELECT
sync_rst => pc.OUTPUTSELECT
sync_rst => pc.OUTPUTSELECT
sync_rst => pc.OUTPUTSELECT
sync_rst => word[0]~reg0.ENA
sync_rst => word[1]~reg0.ENA
sync_rst => word[2]~reg0.ENA
sync_rst => word[3]~reg0.ENA
sync_rst => word[4]~reg0.ENA
sync_rst => word[5]~reg0.ENA
sync_rst => word[6]~reg0.ENA
sync_rst => word[7]~reg0.ENA
pc[0] <= pc[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pc[1] <= pc[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pc[2] <= pc[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pc[3] <= pc[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pc[4] <= pc[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pc[5] <= pc[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pc[6] <= pc[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
pc[7] <= pc[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mem_data_in[0] => word[0]~reg0.DATAIN
mem_data_in[1] => word[1]~reg0.DATAIN
mem_data_in[2] => word[2]~reg0.DATAIN
mem_data_in[3] => word[3]~reg0.DATAIN
mem_data_in[4] => word[4]~reg0.DATAIN
mem_data_in[5] => word[5]~reg0.DATAIN
mem_data_in[6] => word[6]~reg0.DATAIN
mem_data_in[7] => word[7]~reg0.DATAIN
word[0] <= word[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
word[1] <= word[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
word[2] <= word[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
word[3] <= word[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
word[4] <= word[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
word[5] <= word[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
word[6] <= word[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
word[7] <= word[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
branch_wr[0] => pc.DATAB
branch_wr[1] => pc.DATAB
branch_wr[2] => pc.DATAB
branch_wr[3] => pc.DATAB
branch_wr[4] => pc.DATAB
branch_wr[5] => pc.DATAB
branch_wr[6] => pc.DATAB
branch_wr[7] => pc.DATAB
branch_wr_en => pc.OUTPUTSELECT
branch_wr_en => pc.OUTPUTSELECT
branch_wr_en => pc.OUTPUTSELECT
branch_wr_en => pc.OUTPUTSELECT
branch_wr_en => pc.OUTPUTSELECT
branch_wr_en => pc.OUTPUTSELECT
branch_wr_en => pc.OUTPUTSELECT
branch_wr_en => pc.OUTPUTSELECT


|smolprocee|cpu:cpu|regfile:regfile
clk => regs[0][0].CLK
clk => regs[0][1].CLK
clk => regs[0][2].CLK
clk => regs[0][3].CLK
clk => regs[0][4].CLK
clk => regs[0][5].CLK
clk => regs[0][6].CLK
clk => regs[0][7].CLK
clk => regs[1][0].CLK
clk => regs[1][1].CLK
clk => regs[1][2].CLK
clk => regs[1][3].CLK
clk => regs[1][4].CLK
clk => regs[1][5].CLK
clk => regs[1][6].CLK
clk => regs[1][7].CLK
clk => regs[2][0].CLK
clk => regs[2][1].CLK
clk => regs[2][2].CLK
clk => regs[2][3].CLK
clk => regs[2][4].CLK
clk => regs[2][5].CLK
clk => regs[2][6].CLK
clk => regs[2][7].CLK
clk => regs[3][0].CLK
clk => regs[3][1].CLK
clk => regs[3][2].CLK
clk => regs[3][3].CLK
clk => regs[3][4].CLK
clk => regs[3][5].CLK
clk => regs[3][6].CLK
clk => regs[3][7].CLK
clk => data_out_B[0]~reg0.CLK
clk => data_out_B[1]~reg0.CLK
clk => data_out_B[2]~reg0.CLK
clk => data_out_B[3]~reg0.CLK
clk => data_out_B[4]~reg0.CLK
clk => data_out_B[5]~reg0.CLK
clk => data_out_B[6]~reg0.CLK
clk => data_out_B[7]~reg0.CLK
clk => data_out_A[0]~reg0.CLK
clk => data_out_A[1]~reg0.CLK
clk => data_out_A[2]~reg0.CLK
clk => data_out_A[3]~reg0.CLK
clk => data_out_A[4]~reg0.CLK
clk => data_out_A[5]~reg0.CLK
clk => data_out_A[6]~reg0.CLK
clk => data_out_A[7]~reg0.CLK
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_A.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => data_out_B.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
sync_rst => regs.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_A => data_out_A.OUTPUTSELECT
read_en_B => data_out_B.OUTPUTSELECT
read_en_B => data_out_B.OUTPUTSELECT
read_en_B => data_out_B.OUTPUTSELECT
read_en_B => data_out_B.OUTPUTSELECT
read_en_B => data_out_B.OUTPUTSELECT
read_en_B => data_out_B.OUTPUTSELECT
read_en_B => data_out_B.OUTPUTSELECT
read_en_B => data_out_B.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
write_en => regs.OUTPUTSELECT
addr_read_A[0] => Mux0.IN1
addr_read_A[0] => Mux1.IN1
addr_read_A[0] => Mux2.IN1
addr_read_A[0] => Mux3.IN1
addr_read_A[0] => Mux4.IN1
addr_read_A[0] => Mux5.IN1
addr_read_A[0] => Mux6.IN1
addr_read_A[0] => Mux7.IN1
addr_read_A[1] => Mux0.IN0
addr_read_A[1] => Mux1.IN0
addr_read_A[1] => Mux2.IN0
addr_read_A[1] => Mux3.IN0
addr_read_A[1] => Mux4.IN0
addr_read_A[1] => Mux5.IN0
addr_read_A[1] => Mux6.IN0
addr_read_A[1] => Mux7.IN0
addr_read_B[0] => Mux8.IN1
addr_read_B[0] => Mux9.IN1
addr_read_B[0] => Mux10.IN1
addr_read_B[0] => Mux11.IN1
addr_read_B[0] => Mux12.IN1
addr_read_B[0] => Mux13.IN1
addr_read_B[0] => Mux14.IN1
addr_read_B[0] => Mux15.IN1
addr_read_B[1] => Mux8.IN0
addr_read_B[1] => Mux9.IN0
addr_read_B[1] => Mux10.IN0
addr_read_B[1] => Mux11.IN0
addr_read_B[1] => Mux12.IN0
addr_read_B[1] => Mux13.IN0
addr_read_B[1] => Mux14.IN0
addr_read_B[1] => Mux15.IN0
addr_write[0] => Decoder0.IN1
addr_write[1] => Decoder0.IN0
data_in[0] => regs.DATAB
data_in[0] => regs.DATAB
data_in[0] => regs.DATAB
data_in[0] => regs.DATAB
data_in[1] => regs.DATAB
data_in[1] => regs.DATAB
data_in[1] => regs.DATAB
data_in[1] => regs.DATAB
data_in[2] => regs.DATAB
data_in[2] => regs.DATAB
data_in[2] => regs.DATAB
data_in[2] => regs.DATAB
data_in[3] => regs.DATAB
data_in[3] => regs.DATAB
data_in[3] => regs.DATAB
data_in[3] => regs.DATAB
data_in[4] => regs.DATAB
data_in[4] => regs.DATAB
data_in[4] => regs.DATAB
data_in[4] => regs.DATAB
data_in[5] => regs.DATAB
data_in[5] => regs.DATAB
data_in[5] => regs.DATAB
data_in[5] => regs.DATAB
data_in[6] => regs.DATAB
data_in[6] => regs.DATAB
data_in[6] => regs.DATAB
data_in[6] => regs.DATAB
data_in[7] => regs.DATAB
data_in[7] => regs.DATAB
data_in[7] => regs.DATAB
data_in[7] => regs.DATAB
data_out_A[0] <= data_out_A[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[1] <= data_out_A[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[2] <= data_out_A[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[3] <= data_out_A[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[4] <= data_out_A[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[5] <= data_out_A[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[6] <= data_out_A[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[7] <= data_out_A[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[0] <= data_out_B[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[1] <= data_out_B[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[2] <= data_out_B[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[3] <= data_out_B[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[4] <= data_out_B[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[5] <= data_out_B[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[6] <= data_out_B[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out_B[7] <= data_out_B[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|smolprocee|cpu:cpu|decode:decode_stage
clk => prv_imm.CLK
sync_rst => prv_imm.OUTPUTSELECT
opcode[0] => opcode_rom:op_rom.opcode[0]
opcode[0] => imm.DATAB
opcode[0] => dst[0]$latch.DATAIN
opcode[0] => regfile_read_A[0].DATAIN
opcode[1] => opcode_rom:op_rom.opcode[1]
opcode[1] => imm.DATAB
opcode[1] => dst[1]$latch.DATAIN
opcode[1] => regfile_read_A[1].DATAIN
opcode[2] => opcode_rom:op_rom.opcode[2]
opcode[2] => imm.DATAB
opcode[2] => Selector3.IN3
opcode[2] => regfile_read_B[0].DATAIN
opcode[3] => opcode_rom:op_rom.opcode[3]
opcode[3] => imm.DATAB
opcode[3] => Selector4.IN3
opcode[3] => regfile_read_B[1].DATAIN
opcode[4] => opcode_rom:op_rom.opcode[4]
opcode[4] => imm.DATAB
opcode[4] => Selector5.IN3
opcode[4] => Selector3.IN0
opcode[5] => opcode_rom:op_rom.opcode[5]
opcode[5] => imm.DATAB
opcode[5] => Selector6.IN3
opcode[5] => Selector4.IN0
opcode[6] => opcode_rom:op_rom.opcode[6]
opcode[6] => imm.DATAB
opcode[6] => Selector7.IN3
opcode[6] => Selector5.IN0
opcode[7] => opcode_rom:op_rom.opcode[7]
opcode[7] => imm.DATAB
opcode[7] => Selector8.IN3
opcode[7] => Selector6.IN0
stall_en <= <GND>
dst[0] <= dst[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
dst[1] <= dst[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out_A[0] <= data_A[0].DB_MAX_OUTPUT_PORT_TYPE
data_out_A[1] <= data_A[1].DB_MAX_OUTPUT_PORT_TYPE
data_out_A[2] <= data_A[2].DB_MAX_OUTPUT_PORT_TYPE
data_out_A[3] <= data_A[3].DB_MAX_OUTPUT_PORT_TYPE
data_out_A[4] <= data_A[4].DB_MAX_OUTPUT_PORT_TYPE
data_out_A[5] <= data_A[5].DB_MAX_OUTPUT_PORT_TYPE
data_out_A[6] <= data_A[6].DB_MAX_OUTPUT_PORT_TYPE
data_out_A[7] <= data_A[7].DB_MAX_OUTPUT_PORT_TYPE
data_out_B[0] <= data_B[0].DB_MAX_OUTPUT_PORT_TYPE
data_out_B[1] <= data_B[1].DB_MAX_OUTPUT_PORT_TYPE
data_out_B[2] <= data_B[2].DB_MAX_OUTPUT_PORT_TYPE
data_out_B[3] <= data_B[3].DB_MAX_OUTPUT_PORT_TYPE
data_out_B[4] <= data_B[4].DB_MAX_OUTPUT_PORT_TYPE
data_out_B[5] <= data_B[5].DB_MAX_OUTPUT_PORT_TYPE
data_out_B[6] <= data_B[6].DB_MAX_OUTPUT_PORT_TYPE
data_out_B[7] <= data_B[7].DB_MAX_OUTPUT_PORT_TYPE
opc_out[0] <= inner_opc[0].DB_MAX_OUTPUT_PORT_TYPE
opc_out[1] <= inner_opc[1].DB_MAX_OUTPUT_PORT_TYPE
opc_out[2] <= inner_opc[2].DB_MAX_OUTPUT_PORT_TYPE
opc_out[3] <= inner_opc[3].DB_MAX_OUTPUT_PORT_TYPE
opc_out[4] <= inner_opc[4].DB_MAX_OUTPUT_PORT_TYPE
opc_out[5] <= inner_opc[5].DB_MAX_OUTPUT_PORT_TYPE
opc_out[6] <= <GND>
opc_out[7] <= <GND>
imm[0] <= imm.DB_MAX_OUTPUT_PORT_TYPE
imm[1] <= imm.DB_MAX_OUTPUT_PORT_TYPE
imm[2] <= imm.DB_MAX_OUTPUT_PORT_TYPE
imm[3] <= imm.DB_MAX_OUTPUT_PORT_TYPE
imm[4] <= imm.DB_MAX_OUTPUT_PORT_TYPE
imm[5] <= imm.DB_MAX_OUTPUT_PORT_TYPE
imm[6] <= imm.DB_MAX_OUTPUT_PORT_TYPE
imm[7] <= imm.DB_MAX_OUTPUT_PORT_TYPE
regfile_read_A[0] <= opcode[0].DB_MAX_OUTPUT_PORT_TYPE
regfile_read_A[1] <= opcode[1].DB_MAX_OUTPUT_PORT_TYPE
regfile_read_B[0] <= opcode[2].DB_MAX_OUTPUT_PORT_TYPE
regfile_read_B[1] <= opcode[3].DB_MAX_OUTPUT_PORT_TYPE
read_en_A <= read_en_A$latch.DB_MAX_OUTPUT_PORT_TYPE
read_en_B <= read_en_B$latch.DB_MAX_OUTPUT_PORT_TYPE
data_A[0] => data_out_A[0].DATAIN
data_A[1] => data_out_A[1].DATAIN
data_A[2] => data_out_A[2].DATAIN
data_A[3] => data_out_A[3].DATAIN
data_A[4] => data_out_A[4].DATAIN
data_A[5] => data_out_A[5].DATAIN
data_A[6] => data_out_A[6].DATAIN
data_A[7] => data_out_A[7].DATAIN
data_B[0] => data_out_B[0].DATAIN
data_B[1] => data_out_B[1].DATAIN
data_B[2] => data_out_B[2].DATAIN
data_B[3] => data_out_B[3].DATAIN
data_B[4] => data_out_B[4].DATAIN
data_B[5] => data_out_B[5].DATAIN
data_B[6] => data_out_B[6].DATAIN
data_B[7] => data_out_B[7].DATAIN


|smolprocee|cpu:cpu|decode:decode_stage|opcode_rom:op_rom
opcode[0] => ~NO_FANOUT~
opcode[1] => ~NO_FANOUT~
opcode[2] => Decoder0.IN3
opcode[3] => Decoder0.IN2
opcode[4] => Decoder0.IN1
opcode[4] => Decoder1.IN3
opcode[5] => Decoder0.IN0
opcode[5] => Decoder1.IN2
opcode[6] => Decoder1.IN1
opcode[7] => Decoder1.IN0
instr_t[0] <= Selector0.DB_MAX_OUTPUT_PORT_TYPE
instr_t[1] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
instr_t[2] <= <GND>
instr_t[3] <= <GND>
instr_t[4] <= <GND>
instr_t[5] <= <GND>
instr_t[6] <= <GND>
instr_t[7] <= <GND>
instr_t[8] <= <GND>
instr_t[9] <= <GND>
instr_t[10] <= <GND>
instr_t[11] <= <GND>
instr_t[12] <= <GND>
instr_t[13] <= <GND>
instr_t[14] <= <GND>
instr_t[15] <= <GND>
instr_t[16] <= <GND>
instr_t[17] <= <GND>
instr_t[18] <= <GND>
instr_t[19] <= <GND>
instr_t[20] <= <GND>
instr_t[21] <= <GND>
instr_t[22] <= <GND>
instr_t[23] <= <GND>
instr_t[24] <= <GND>
instr_t[25] <= <GND>
instr_t[26] <= <GND>
instr_t[27] <= <GND>
instr_t[28] <= <GND>
instr_t[29] <= <GND>
instr_t[30] <= <GND>
instr_t[31] <= <GND>


